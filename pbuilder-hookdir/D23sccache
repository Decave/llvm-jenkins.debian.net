#!/bin/sh

set -ex

echo "Also start sccache to test"
mkdir -p /opt/sccache
cd /opt/sccache/
if test ! -f sccache; then
    ARCH=$(uname -m)
    if test "$ARCH" = "i686" -o "$ARCH" = "i386"; then
        wget -O sccache --no-check-certificate https://github.com/opencollab/llvm-jenkins.debian.net/raw/master/sccache.i386
        wget -O libssl.so.1.1 --no-check-certificate https://github.com/opencollab/llvm-jenkins.debian.net/raw/master/libssl.so.1.1.i386
        wget -O libcrypto.so.1.1 --no-check-certificate https://github.com/opencollab/llvm-jenkins.debian.net/raw/master/libcrypto.so.1.1.i386
    else
        wget --no-check-certificate https://github.com/opencollab/llvm-jenkins.debian.net/raw/master/sccache https://github.com/opencollab/llvm-jenkins.debian.net/raw/master/libssl.so.1.1 https://github.com/opencollab/llvm-jenkins.debian.net/raw/master/libcrypto.so.1.1
    fi
    chmod +x sccache
fi
export SCCACHE_GCS_BUCKET=apt-llvm-org-sccache
export SCCACHE_GCS_RW_MODE=READ_WRITE
export SCCACHE_GCS_KEY_PATH=/opt/sccache/secret-gcp-storage.json
export SCCACHE_VERBOSE_STATS=1
./sccache --show-stats||true
ls -al


# To rebuild sccache:
# on a buster chroot
# apt install libssl-dev git pkg-config curl gcc --no-install-recommends
# curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
# source "$HOME/.cargo/env"
# git clone https://github.com/mozilla/sccache.git
# cd sccache
# cargo build --release --no-default-features --features=gcs
# strip target/release/sccache
